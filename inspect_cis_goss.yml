---
- name: Inspeccionar control CIS con Goss
  hosts: "{{ target_ip | default('localhost') }}" 
  become: true
  tasks:
    - name: Copiar el binario de Goss al servidor remoto
      ansible.builtin.copy:
        src: goss/goss
        dest: /usr/local/bin/goss
        mode: '0755'

    - name: Copiar el archivo de configuración de Goss
      ansible.builtin.copy:
        content: |
          command:
            squashfs:
              title: 1.1.1.1 | Ensure mounting of squashfs filesystems is disabled | disabled
              exit-status: 0
              exec: "modprobe -n -v squashfs | grep -E '(vfat|install)'"
              stdout:
              - install /bin/true
              meta:
                server: 2
                workstation: 2
                CIS_ID: 1.1.1.1
                CISv8:
                - 4.8
                CISv8_IG1: false
                CISv8_IG2: true
                CISv8_IG3: true
            blacklist_squashfs:
              title: 1.1.1.1 | Ensure mounting of squashfs filesystems is disabled | blacklist
              exit-status: 0
              exec: grep squashfs /etc/modprobe.d/blacklist.conf
              stdout:
                - '/blacklist squashfs/'
              meta:
                server: 2
                workstation: 2
                CIS_ID: 1.1.1.1
                CISv8:
                - 4.8
                CISv8_IG1: false
                CISv8_IG2: true
                CISv8_IG3: true
            var_tmp_partition:
              title: 1.1.4.1 | Ensure separate partition exists for /var/tmp
              exec: mount -l | grep -w /var/tmp
              exit-status: 0
              stdout:
              - 'on /var/tmp'
              meta:
                server: 2
                workstation: 2
                CIS_ID:
                - 1.1.4.1
                CISv8: 3.3
                CISv8_IG1: true
                CISv8_IG2: true
                CISv8_IG3: true
        dest: /tmp/goss.yaml
        mode: '0644'

    - name: Ejecutar validación de Goss
      ansible.builtin.command: /usr/local/bin/goss --gossfile /tmp/goss.yaml validate -f documentation
      register: goss_result
      failed_when: goss_result.rc != 0
      changed_when: false

    - name: Mostrar resultados de la validación
      ansible.builtin.debug:
        var: goss_result.stdout

